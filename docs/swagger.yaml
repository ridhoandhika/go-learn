definitions:
  dto.AuthReq:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dto.AuthResp:
    properties:
      access_token:
        type: string
    type: object
  dto.BaseResp:
    properties:
      error_schema:
        $ref: '#/definitions/dto.ErrorSchema'
      output_schema:
        description: OutputSchema fleksibel (bisa berisi apa saja)
    type: object
  dto.Education:
    properties:
      degree:
        type: string
      description:
        type: string
      education_id:
        type: string
      end_date:
        type: string
      field_of_study:
        type: string
      school_name:
        type: string
      start_date:
        type: string
    type: object
  dto.EducationResp:
    properties:
      education:
        items:
          $ref: '#/definitions/dto.Education'
        type: array
    type: object
  dto.ErrorMessage:
    properties:
      en:
        type: string
      id:
        type: string
    type: object
  dto.ErrorSchema:
    properties:
      error_code:
        type: string
      error_message:
        $ref: '#/definitions/dto.ErrorMessage'
    type: object
  dto.InsertEducationReq:
    properties:
      degree:
        type: string
      description:
        type: string
      education_id:
        type: string
      end_date:
        type: string
      field_of_study:
        type: string
      school_name:
        type: string
      start_date:
        type: string
      user_id:
        type: string
    type: object
  dto.InsertPersonalInformationReq:
    properties:
      address:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      summary:
        type: string
      user_id:
        type: string
    type: object
  dto.InsertWorkExperienceReq:
    properties:
      company_name:
        type: string
      end_date:
        type: string
      job_description:
        type: string
      job_title:
        type: string
      start_date:
        type: string
      user_id:
        type: string
    type: object
  dto.PersonalInformationResp:
    properties:
      address:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      personal_info_id:
        type: string
      phone_number:
        type: string
      summary:
        type: string
      user_id:
        type: string
    type: object
  dto.UpdateEducationReq:
    properties:
      degree:
        type: string
      description:
        type: string
      end_date:
        type: string
      field_of_study:
        type: string
      school_name:
        type: string
      start_date:
        type: string
    type: object
  dto.UpdatePersonalInformationReq:
    properties:
      address:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      summary:
        type: string
    type: object
  dto.UpdateWorkExperienceReq:
    properties:
      company_name:
        type: string
      end_date:
        type: string
      job_description:
        type: string
      job_title:
        type: string
      start_date:
        type: string
    type: object
  dto.UserRegisterReq:
    properties:
      fullname:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  dto.WorkExperience:
    properties:
      company_name:
        type: string
      end_date:
        type: string
      job_description:
        type: string
      job_title:
        type: string
      start_date:
        type: string
    type: object
  dto.WorkExperiencesResp:
    properties:
      work_experience:
        items:
          $ref: '#/definitions/dto.WorkExperience'
        type: array
    type: object
info:
  contact: {}
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and generate JWT token
      parameters:
      - description: Login Credentials
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.AuthReq'
      produces:
      - application/json
      responses:
        "200":
          description: JWT Token
          schema:
            allOf:
            - $ref: '#/definitions/dto.BaseResp'
            - properties:
                output_schema:
                  $ref: '#/definitions/dto.AuthResp'
              type: object
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
        "401":
          description: Authentication Failed
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
      summary: Generate Token for Authentication
      tags:
      - auth
  /api/auth/refresh:
    get:
      consumes:
      - application/json
      description: Refresh the JWT token for a logged-in user
      parameters:
      - description: Bearer JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: New JWT Token
          schema:
            allOf:
            - $ref: '#/definitions/dto.BaseResp'
            - properties:
                output_schema:
                  $ref: '#/definitions/dto.AuthResp'
              type: object
        "401":
          description: Authentication Failed
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
      security:
      - BearerAuth: []
      summary: Refresh JWT Token
      tags:
      - auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user by providing user credentials
      parameters:
      - description: User Registration Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UserRegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: Registration Success
          schema:
            $ref: '#/definitions/dto.BaseResp'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
      summary: Register a new user
      tags:
      - auth
  /api/education:
    post:
      consumes:
      - application/json
      description: Create Education
      parameters:
      - description: Bearer JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Body Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.InsertEducationReq'
      produces:
      - application/json
      responses:
        "200":
          description: Education Details
          schema:
            $ref: '#/definitions/dto.BaseResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
      security:
      - BearerAuth  // Menunjukkan endpoint membutuhkan otentikasi Bearer token: []
      summary: Insert Education
      tags:
      - education
  /api/education/{id}:
    put:
      consumes:
      - application/json
      description: Retrieve detailed education by ID
      parameters:
      - description: Bearer JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Education ID
        in: path
        name: id
        required: true
        type: string
      - description: Body Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateEducationReq'
      produces:
      - application/json
      responses:
        "200":
          description: Work Experience resp
          schema:
            $ref: '#/definitions/dto.BaseResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
      security:
      - BearerAuth  // Menunjukkan endpoint membutuhkan otentikasi Bearer token: []
      summary: Update Education
      tags:
      - education
  /api/education/{userId}:
    get:
      consumes:
      - application/json
      description: Get Education by User Id
      parameters:
      - description: Bearer JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Education details successfully retrieved
          schema:
            allOf:
            - $ref: '#/definitions/dto.BaseResp'
            - properties:
                output_schema:
                  allOf:
                  - $ref: '#/definitions/dto.EducationResp'
                  - properties:
                      education:
                        items:
                          $ref: '#/definitions/dto.Education'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
      security:
      - BearerAuth  // Menunjukkan endpoint membutuhkan otentikasi Bearer token: []
      summary: Get Education
      tags:
      - education
  /api/personal-information:
    post:
      consumes:
      - application/json
      description: Retrieve detailed personal information by ID
      parameters:
      - description: Bearer JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Body Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.InsertPersonalInformationReq'
      produces:
      - application/json
      responses:
        "200":
          description: Personal Information Details
          schema:
            $ref: '#/definitions/dto.BaseResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
      security:
      - BearerAuth  // Menunjukkan endpoint membutuhkan otentikasi Bearer token: []
      summary: Insert Personal Information
      tags:
      - personal-information
  /api/personal-information/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve detailed personal information by ID
      parameters:
      - description: Bearer JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Personal Information ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Personal Information Details
          schema:
            allOf:
            - $ref: '#/definitions/dto.BaseResp'
            - properties:
                output_schema:
                  $ref: '#/definitions/dto.PersonalInformationResp'
              type: object
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
        "401":
          description: Authentication Failed
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
        "404":
          description: User Not Found
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
      security:
      - BearerAuth  // Menunjukkan endpoint membutuhkan otentikasi Bearer token: []
      summary: Get Personal Information
      tags:
      - personal-information
    put:
      consumes:
      - application/json
      description: Retrieve detailed personal information by ID
      parameters:
      - description: Bearer JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Personal Information ID
        in: path
        name: id
        required: true
        type: string
      - description: Body Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdatePersonalInformationReq'
      produces:
      - application/json
      responses:
        "200":
          description: Personal Information Details
          schema:
            $ref: '#/definitions/dto.BaseResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
      security:
      - BearerAuth  // Menunjukkan endpoint membutuhkan otentikasi Bearer token: []
      summary: Update Personal Information
      tags:
      - personal-information
  /api/work-experience:
    post:
      consumes:
      - application/json
      description: Create Work Experience
      parameters:
      - description: Bearer JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Body Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.InsertWorkExperienceReq'
      produces:
      - application/json
      responses:
        "200":
          description: Personal Information Details
          schema:
            $ref: '#/definitions/dto.BaseResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
      security:
      - BearerAuth  // Menunjukkan endpoint membutuhkan otentikasi Bearer token: []
      summary: Insert Work Experience
      tags:
      - work-experience
  /api/work-experience/{id}:
    put:
      consumes:
      - application/json
      description: Retrieve detailed work experience by ID
      parameters:
      - description: Bearer JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Work Experience ID
        in: path
        name: id
        required: true
        type: string
      - description: Body Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateWorkExperienceReq'
      produces:
      - application/json
      responses:
        "200":
          description: Work Experience resp
          schema:
            $ref: '#/definitions/dto.BaseResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
      security:
      - BearerAuth  // Menunjukkan endpoint membutuhkan otentikasi Bearer token: []
      summary: Update Work Experience
      tags:
      - work-experience
  /api/work-experience/{userId}:
    get:
      consumes:
      - application/json
      description: Get Work Experience by User Id
      parameters:
      - description: Bearer JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Working Experiences
          schema:
            allOf:
            - $ref: '#/definitions/dto.BaseResp'
            - properties:
                output_schema:
                  allOf:
                  - $ref: '#/definitions/dto.WorkExperiencesResp'
                  - properties:
                      work_experience:
                        items:
                          $ref: '#/definitions/dto.WorkExperience'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dto.ErrorSchema'
      security:
      - BearerAuth  // Menunjukkan endpoint membutuhkan otentikasi Bearer token: []
      summary: Get Work Experience
      tags:
      - work-experience
swagger: "2.0"
